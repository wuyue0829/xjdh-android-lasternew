//
// DO NOT EDIT THIS FILE.Generated using AndroidAnnotations 3.3.1.
//  You can create a larger work that contains this file and distribute that work under terms of your choice.
//


package com.chinatelecom.xjdh.ui;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.Button;
import android.widget.GridView;
import com.chinatelecom.xjdh.R.layout;
import com.chinatelecom.xjdh.bean.ApiResponseUpLoad;
import com.chinatelecom.xjdh.rest.client.ApiRestClientInterface_;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.SdkVersionHelper;
import org.androidannotations.api.builder.ActivityIntentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class UploadSignActivity_
    extends UploadSignActivity
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    public final static String QUESTION_ID_EXTRA = "question_ID";
    public final static String STATION_CODE_EXTRA = "station_code";
    private Handler handler_ = new Handler(Looper.getMainLooper());

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(layout.signature);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        mApiClient = new ApiRestClientInterface_(this);
        injectExtras_();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static UploadSignActivity_.IntentBuilder_ intent(Context context) {
        return new UploadSignActivity_.IntentBuilder_(context);
    }

    public static UploadSignActivity_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new UploadSignActivity_.IntentBuilder_(fragment);
    }

    public static UploadSignActivity_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new UploadSignActivity_.IntentBuilder_(supportFragment);
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (((SdkVersionHelper.getSdkInt()< 5)&&(keyCode == KeyEvent.KEYCODE_BACK))&&(event.getRepeatCount() == 0)) {
            onBackPressed();
        }
        return super.onKeyDown(keyCode, event);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        con_sign = ((Button) hasViews.findViewById(com.chinatelecom.xjdh.R.id.con_sign));
        gridview = ((GridView) hasViews.findViewById(com.chinatelecom.xjdh.R.id.gridview));
        up_sign = ((Button) hasViews.findViewById(com.chinatelecom.xjdh.R.id.up_sign));
        if (con_sign!= null) {
            con_sign.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    UploadSignActivity_.this.signOnClick(view);
                }

            }
            );
        }
        if (up_sign!= null) {
            up_sign.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    UploadSignActivity_.this.signOnClick(view);
                }

            }
            );
        }
        if (gridview!= null) {
            gridview.setOnItemClickListener(new OnItemClickListener() {


                @Override
                public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                    UploadSignActivity_.this.OnGridItemClick(position);
                }

            }
            );
        }
        ShowView();
    }

    private void injectExtras_() {
        Bundle extras_ = getIntent().getExtras();
        if (extras_!= null) {
            if (extras_.containsKey(QUESTION_ID_EXTRA)) {
                question_ID = extras_.getInt(QUESTION_ID_EXTRA);
            }
            if (extras_.containsKey(STATION_CODE_EXTRA)) {
                station_code = extras_.getInt(STATION_CODE_EXTRA);
            }
        }
    }

    @Override
    public void setIntent(Intent newIntent) {
        super.setIntent(newIntent);
        injectExtras_();
    }

    @Override
    public void ShowResponse(final ApiResponseUpLoad resp) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                UploadSignActivity_.super.ShowResponse(resp);
            }

        }
        );
    }

    @Override
    public void DoWorkerUpload(final int station_code, final int user_ID, final int question_ID) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    UploadSignActivity_.super.DoWorkerUpload(station_code, user_ID, question_ID);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void getUserInfo() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    UploadSignActivity_.super.getUserInfo();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    public static class IntentBuilder_
        extends ActivityIntentBuilder<UploadSignActivity_.IntentBuilder_>
    {

        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            super(context, UploadSignActivity_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            super(fragment.getActivity(), UploadSignActivity_.class);
            fragment_ = fragment;
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            super(fragment.getActivity(), UploadSignActivity_.class);
            fragmentSupport_ = fragment;
        }

        @Override
        public void startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent, requestCode);
            } else {
                if (fragment_!= null) {
                    fragment_.startActivityForResult(intent, requestCode, lastOptions);
                } else {
                    if (context instanceof Activity) {
                        Activity activity = ((Activity) context);
                        activity.startActivityForResult(intent, requestCode, lastOptions);
                    } else {
                        context.startActivity(intent, lastOptions);
                    }
                }
            }
        }

        public UploadSignActivity_.IntentBuilder_ question_ID(int question_ID) {
            return super.extra(QUESTION_ID_EXTRA, question_ID);
        }

        public UploadSignActivity_.IntentBuilder_ station_code(int station_code) {
            return super.extra(STATION_CODE_EXTRA, station_code);
        }

    }

}
